/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public TreeNode SortedListToBST(ListNode head) {
       //law 1 element bas 
    if (head == null)
    {
        return null ;
    }
    ListNode slow = head;
    ListNode fast = head;
   

    while (fast != null && fast.next != null)
    {
        
        slow = slow.next;
        fast = fast.next.next;

    }
    ListNode mid = slow;
     TreeNode tree = new TreeNode(mid.val);

//law fadia 
    if (mid==head)
    {
        return tree;
    }
     ListNode prev = head;
    while (prev.next != mid)
    {
        prev=prev.next;
    }
    
  prev.next = null;  

    //right
    tree.right = SortedListToBST(mid.next);
    //left
    tree.left = SortedListToBST(head);
    return tree;


    }
}